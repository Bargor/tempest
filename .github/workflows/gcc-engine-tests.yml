name: gcc-engine-tests
on: [push]
 
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        engine: [Vk, GL]
    steps:
    - name: checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: install
      run: sudo apt-get install -y libgl1-mesa-dev libxinerama-dev libxcursor-dev xorg-dev mesa-vulkan-drivers vulkan-utils xvfb
    - name: build GLEW
      if: ${{ matrix.engine == 'GL'}}
      env:
        CC: gcc-10
        CXX: gcc++-10
      run: |
        cd libs/glew/build;
        cmake ../build/cmake/.;
        sudo make -j2
        sudo make install;
        cd ../../../;
    - name: install vulkan
      if: ${{ matrix.engine == 'Vk' }}
      run: |
        wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -;
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.148-bionic.list http://packages.lunarg.com/vulkan/1.2.148/lunarg-vulkan-1.2.148-bionic.list;
        sudo apt update;
        sudo apt install lunarg-vulkan-sdk;
    - name: config CMake
      env:
        CC: gcc-10
        CXX: g++-10
        BUILD_TYPE: ${{ matrix.build_type }}
        ENGINE: ${{ matrix.engine }}
      run: | 
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${EXTRA_FLAGS}" -DTEMPEST_BUILD_ALL=ON -DENGINE="$ENGINE"
        make -j2
    - name: run core tests
      run: ./build/exe/core_test
    - name: run queue tests
      if: ${{ matrix.build_type == 'Release' }}
      run: ./build/exe/queue_test
#    - name: run engine tests
#      if: ${{ matrix.build_type == 'Debug' && matrix.engine == 'Vk' }}  
#      uses: GabrielBB/xvfb-action@v1
#      with:
#        run: ./build/exe/engine_test