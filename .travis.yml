language: cpp
dist: xenial
sudo: required

notifications:
  email:
    on_success: never # default: change
    on_failure: always # default: always

matrix:
  include:
    # Debug
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - libgl1-mesa-dev
            - libxinerama-dev
            - libxcursor-dev
            - xorg-dev
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8" BUILD_TYPE=Debug ENGINE=Engine-GL
    # Relase    
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - libgl1-mesa-dev
            - libxinerama-dev
            - libxcursor-dev
            - xorg-dev
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8" BUILD_TYPE=Release ENGINE=Engine-GL
    # Clang Debug
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
            - lld-8
            - llvm-8
            - llvm-8-dev
            - llvm-8-runtime
            - libgl1-mesa-dev
            - libxinerama-dev
            - libxcursor-dev
            - xorg-dev
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8" BUILD_TYPE=Debug ENGINE=Engine-GL
        - EXTRA_FLAGS="-stdlib=libc++"
    # Clang Release
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
            - lld-8
            - llvm-8
            - llvm-8-dev
            - llvm-8-runtime
            - libgl1-mesa-dev
            - libxinerama-dev
            - libxcursor-dev
            - xorg-dev
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8" BUILD_TYPE=Release ENGINE=Engine-GL
        - EXTRA_FLAGS="-stdlib=libc++"
    # Clang Thread sanitizer
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
            - lld-8
            - llvm-8
            - llvm-8-dev
            - llvm-8-runtime
            - libgl1-mesa-dev
            - libxinerama-dev
            - libxcursor-dev
            - xorg-dev
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8" BUILD_TYPE=Debug ENGINE=Engine-GL
        - EXTRA_FLAGS="-stdlib=libc++ -fsanitize=thread"
    # Clang Release 
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-xenial-8
          packages:
            - clang-8
            - libc++-8-dev
            - libc++abi-8-dev
            - lld-8
            - llvm-8
            - llvm-8-dev
            - llvm-8-runtime
            - libgl1-mesa-dev
            - libxinerama-dev
            - libxcursor-dev
            - xorg-dev
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8" BUILD_TYPE=Debug ENGINE=Engine-GL
        - EXTRA_FLAGS="-stdlib=libc++ -fsanitize=address"
        
before_install:
    - eval "${MATRIX_EVAL}"
    - wget http://www.cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh
    - sudo sh cmake-3.13.0-Linux-x86_64.sh --skip-license --prefix=/usr
    - export PATH=/usr/bin:$PATH
# Build steps

script:
- gcc -v && g++ -v && cmake --version
- clang --version
- cd libs/glew/build
- cmake ../build/cmake/.
- sudo make -j2 && sudo make install
- cd ../../../
- mkdir build
- cd build
- cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS="${EXTRA_FLAGS}" -DTEMPEST_BUILD_ALL=ON -DENGINE="${ENGINE}"
- make -j2
- ./exe/core_test
- if [ "${BUILD_TYPE}" == "Release" ]; then
    ./exe/queue_test;
  fi
